datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String      @id @default(uuid())
  username   String      @unique
  email      String      @unique
  isAdmin    Boolean     @default(false)
  notes      Note[]      
  goals      Goal[]
  
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Note {
  id        String   @id @default(uuid())
  content   String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum GoalType {
  COUNTABLE
  YES_NO
}

model Goal {
  id          String         @id @default(uuid())
  name        String
  type        GoalType
  targetValue Int?          // Only used for COUNTABLE goals
  endDate     DateTime
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  progress    GoalProgress[]
  reminder    Reminder?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model GoalProgress {
  id        String   @id @default(uuid())
  goal      Goal     @relation(fields: [goalId], references: [id], onDelete: Cascade)
  goalId    String
  value     Int      // For COUNTABLE: actual number, for YES_NO: 0 or 1
  date      DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([goalId, date]) // Only one progress entry per goal per day
}

model Reminder {
  id        String   @id @default(uuid())
  goal      Goal     @relation(fields: [goalId], references: [id], onDelete: Cascade)
  goalId    String   @unique // One reminder per goal
  enabled   Boolean  @default(true)
  time      DateTime // Time of day for the reminder
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
